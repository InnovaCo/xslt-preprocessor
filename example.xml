<stylesheet use="exsl common dynamic">
	<!-- Подключение шаблонов -->
	<t:import href="file.xml"/>

	<!-- Генерация элемента (инлайн) -->
	<div 
		id="{@id?}"
		id="{@id if contains(@id, 'foo')}"
		class="{@mod1?, @mod2 if @mod &gt; 2}"
		params="{@param1?, @param2 if @param &gt; 3}"
		>
		Hello
	</div>

	<!-- Генерация элемента (структурно) -->
	<div>
		<attribute name="id" value="{cond?}"/>
		<!-- 
		Добавит атрибут `id` только в том случае, если условие `cond` истинно.
		`value` может принимать attr-expr, как и в инлайн-атрибутах 
		Аналогичный XSL:
		<xsl:if test="cond">
			<xsl-attribute name="id">
				<xsl:value-of select="cond"/>
			</xsl-attribute>
		</xsl:if>
		-->

		<attribute name="id" if="cond">...</attribute>
		<attribute name="id" value="a" if="b"/>


		<!-- 
		Отработает инструкцию <t:attr> только если выполняется условие `cond`.
		Аналогичный XSL:
		<xsl:if test="cond">
			<xsl-attribute name="id">...</xsl-attribute>
		</xsl:if>
		-->

		<attribute-set select="a: 'test', b: @attr" prefix="data-"/>
		<!--
		Добавляет атрибуты текущему элементу из указанного набора элементов.
		Название элемента будет названием атрибута (опционально к нему 
		добавляется значение атрибута prefix), строковое значение атрибута —
		значением атрибута
		-->
	</div>

	<p if="@attr?">if</p>

	<!-- Вызов шаблона -->
	<apply-templates select="foo/bar" 
		params="name1: value1, name2: value2?">
		<!--
		params="node-set" — передаст набор параметров в шаблон, определённых в node-set. Название нода будет названием параметра, значение нода —
		значением параметра
		-->

		<param name="param-name" if="cond">...</param> <!-- аналог xsl:with-param -->
		<!-- 
		Передаст параметр `param-name` в шаблон только в том случае, если 
		условие `cond` вернёт истинное значение
		-->
	</apply-templates>

	<!-- Вывод результата Xpath -->
	{{foo/bar[name = $test]}}
</stylesheet>